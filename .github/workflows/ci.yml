name: Unit Tests

on:
    push: ~
    pull_request: ~
    schedule:
        # * is a special character in YAML so you have to quote this string
        - cron: '0 0 * * 1'

jobs:
    tests:
        name: PHP ${{ matrix.php-versions }} on ${{ matrix.os }}
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                php-versions: ['7.1', '7.2', '7.3', '7.4', '8.0', '8.1', '8.2']
                os: [ubuntu-latest]

        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Set up PHP ${{ matrix.php-versions }}
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php-versions }}
                  extensions: curl, json, soap, sockets
                  coverage: xdebug

            - name: Setup Problem Matchers for PHP
              run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

            - name: Setup Problem Matchers for PHPUnit
              run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

            - name: Validate composer.json and composer.lock
              run: composer validate

            - name: Get Composer Cache Directory
              id: composer-cache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Cache dependencies
              uses: actions/cache@v1
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: ${{ runner.os }}-composer-

            - name: Install dependencies
              run: composer ${{ matrix.dependencies }} --prefer-dist --no-progress --no-suggest

            - name: Show Installed Dependencies
              run: composer show

            - name: Run test suite
              run: composer test

            - name: Push to Scrutinizer
              if: matrix.php-versions == '7.4' && runner.os == 'Linux' && matrix.dependencies == 'install'
              run: |
                  composer coverage
                  wget https://scrutinizer-ci.com/ocular.phar
                  php ocular.phar code-coverage:upload --format=php-clover coverage.clover
